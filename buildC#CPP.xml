<?xml version="1.0"?>

<!-- ===================================================================== -->
<!-- C2C build file  make_c#calltagger  make_c#apicommon  make_autotagger  -->
<!-- ===================================================================== -->
<project name="BuildC++" default="" basedir="." xmlns:ac="antlib:net.sf.antcontrib">

    <!-- ================================================================= -->
    <!-- Make ADIT                                                         -->
    <!-- ================================================================= -->
    <target name="make-ADIT" description="Makes ADIT">
        <build-cpp solution.file="${dir.src}/tools/ADIT/Gold/ADIT.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Administrator.exe                                            -->
    <!-- ================================================================= -->
    <target name="make-Administrator" description="Makes Administrator.exe">
        <build-cpp solution.file="${dir.src}/clients/admin/Administrator/Administrator.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make AgentAdherence.ocx                                          -->
    <!-- ================================================================= -->
    <target name="make-AgentAdherence_OCX" description="Makes AgentAdherence.ocx">
        <build-cpp solution.file="${dir.src}/clients/wfm/agentadherence/AgentAdherence.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make Agent Automation                                            -->
    <!-- ================================================================= -->
    <target name="make-AgentAutomation" depends="propset" description="Makes AgentAutomation.dll">
        <build-cpp solution.file="${dir.src}/apis/AgentAutomation.sln"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make AgentSchedule.ocx                                           -->
    <!-- ================================================================= -->
    <target name="make-AgentSchedule_OCX" description="Makes AgentSchedule.ocx">
        <build-cpp solution.file="${dir.src}/clients/wfm/agentschedule/AgentSchedule.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make AgentSupport                                                -->
    <!-- ================================================================= -->
    <!-- TODO organize this such that the languages are separable.  In other
    words, do it the same way EnvisionControls_CAB is done in build.xml. -->
    <!-- TODO macrodefs?  Maybe this should come after the previous TODO about
    separating by languages.  See buildSetup.xml for an example. -->
    <target name="make-AgentSupport" depends="propset" description="Makes AgentSupport">
        <build-cpp solution.file="${dir.src}/clients/AgentSupport.sln"/>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <build-cpp configuration="ReleaseGerman"
                    solution.file="${dir.src}/clients/AgentSupport.sln"/>
                <build-cpp configuration="ReleaseSpanish"
                    solution.file="${dir.src}/clients/AgentSupport.sln"/>
            </then>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!--  Make AgentX.ocx                                                  -->
    <!-- ================================================================= -->
    <target name="make-AgentX_OCX" depends="propset" description="Makes AgentX.ocx">
        <build-cpp solution.file="${dir.src}/clients/quality/agentdesktop/AgentX.vcproj"/>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <build-cpp configuration="ReleaseGerman"
                    solution.file="${dir.src}/clients/quality/agentdesktop/AgentX.vcproj"/>
                <build-cpp configuration="ReleaseSpanish"
                    solution.file="${dir.src}/clients/quality/agentdesktop/AgentX.vcproj"/>
            </then>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!-- Make AGMS                                                         -->
    <!-- ================================================================= -->
    <target name="make-AGMS" description="Makes AGMS">
        <build-cpp solution.file="${dir.src}/tools/AGMS/AGMS.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make AnalyticsUtilities                                           -->
    <!-- ================================================================= -->
    <target name="make-AnalyticsUtilities" description="Makes EnvisionAnalyticsUtilities.dll">
        <build-cpp solution.file="${dir.src}/clients/centricity/Analytics/AnalyticsUtilities/AnalyticsUtilities.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make C# APICommon.dll                                             -->
    <!-- ================================================================= -->
    <target name="make-APICommon_CS" description="Makes APICommon.dll">
        <build-cpp solution.file="${dir.src}/apis/bi/com/et/bi/api/common/APICommon.csproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Automated Tagger DLLs                                        -->
    <!-- ================================================================= -->
    <!-- VB, but compiled with build-CSharp (go figure) -->
    <target name="make-AutoTagger" description="Makes Automated Tagger DLLs">
        <build-cpp solution.file="${dir.src}/clients/focus/PSPost.root/AutomatedTagger.sln"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make C2CReportingControls.ocx                                    -->
    <!-- ================================================================= -->
    <target name="make-C2CReportingControls_OCX" depends="propset" description="Makes C2CReportingControls.ocx">
        <build-cpp solution.file="${dir.src}/clients/reporting/C2CReportingControls/C2CReportingControls.sln"/>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <build-cpp configuration="ReleaseGerman"
                    solution.file="${dir.src}/clients/reporting/C2CReportingControls/C2CReportingControls.sln"/>
                <build-cpp configuration="ReleaseSpanish"
                    solution.file="${dir.src}/clients/reporting/C2CReportingControls/C2CReportingControls.sln"/>
            </then>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!-- Make BI Call Tagger                                               -->
    <!-- ================================================================= -->
    <target name="make-CallTagger_CS" description="Makes BI Call Tagger">
        <build-cpp solution.file="${dir.src}/apis/bi/com/et/bi/api/tagger/ETCallTagger.csproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Centricity web app                                           -->
    <!-- ================================================================= -->
    <!-- Dependencies:
    . \\Bigfoot\Engineering\Software\MICROSOFT\VS2005Pro-SP1
    . \\Bigfoot\Engineering\Software\MICROSOFT\VS2005 Addins\webdeploymentsetup.msi
    . ASPAJAXExtSetup.msi [ASP.NET 2.0 AJAX Extensions 1.0] -->
    <target name="make-Centricity" description="Makes Centricity web app">
        <build-cpp configuration="Production" solution.file="${dir.src}/clients/centricity/Centricity.sln"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make Channel Manager                                             -->
    <!-- ================================================================= -->
    <target name="make-ChannelManager" description="Makes channelmanager devenv.exe">
        <build-cpp solution.file="${dir.src}/winservices/ChannelManager.sln"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make CiscoICM                                                    -->
    <!-- ================================================================= -->
    <target name="make-CiscoICM" description="Makes CiscoICM.dll">
        <build-cpp solution.file="${dir.src}/contactsources/ciscoicm/CiscoICM.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make ContactSourceUtilities.lib                                   -->
    <!-- ================================================================= -->
    <target name="make-ContactSourceUtilities_LIB" description="Makes ContactSourceUtils.lib">
        <build-cpp solution.file="${dir.src}/contactsources/contactsourceutilities/ContactSourceUtils.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make CSTA Loader                                                   -->
    <!-- ================================================================= -->
    <!-- TODO is there a cstaLoader solution? -timc, Cinco de Mayo 2010 -->
    <target name="make-cstaLoader" description="Makes cstaLoader">
        <build-cpp solution.file="${dir.src}/contactsources/tsapi/cstaLoader/cstaLoader.vcproj"/>
        <build-cpp configuration="Release_1_2"
            solution.file="${dir.src}/contactsources/tsapi/cstaLoader/cstaLoader.vcproj"/>
        <build-cpp configuration="Release_1_3_3"
            solution.file="${dir.src}/contactsources/tsapi/cstaLoader/cstaLoader.vcproj"/>
        <build-cpp configuration="Release_3_33"
            solution.file="${dir.src}/contactsources/tsapi/cstaLoader/cstaLoader.vcproj"/>
        <build-cpp configuration="Release_9_1"
            solution.file="${dir.src}/contactsources/tsapi/cstaLoader/cstaLoader.vcproj"/>
        <build-cpp configuration="Release_9_5"
            solution.file="${dir.src}/contactsources/tsapi/cstaLoader/cstaLoader.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make ctcLoader6.0                                                -->
    <!-- ================================================================= -->
    <!-- TODO is there a ctcLoader solution? -timc, Cinco de Mayo 2010 -->
    <target name="make-ctcLoader6.0" description="Makes ctcLoader6.0">
        <build-cpp solution.file="${dir.src}/contactsources/netmerge/ctcLoader_6_0/ctcLoader_6_0.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make ctcLoader7.0                                                -->
    <!-- ================================================================= -->
    <!-- TODO is there a ctcLoader solution? -timc, Cinco de Mayo 2010 -->
    <target name="make-ctcLoader7.0" description="Makes ctcLoader7.0">
        <build-cpp solution.file="${dir.src}/contactsources/netmerge/ctcLoader_7_0/ctcLoader.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make DADI                                                         -->
    <!-- ================================================================= -->
    <!-- It's not in buildtools/branches/9.0/SP4/base/buildC#CPP.xml -->
    <target name="make-DADI" description="Makes DADI">
        <build-cpp solution.file="${dir.src}/tools/DADI/DADI.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make legacy (v1) DBMigration                                      -->
    <!-- ================================================================= -->
    <target name="make-DBMigration_v1" description="Makes DBMigrationWizard.exe">
        <build-cpp solution.file="${dir.src}/tools/DBMigration/v1/DBMIGRATIONWIZARD/DBMigrationWizard.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make new (v2) DBMigration                                         -->
    <!-- ================================================================= -->
    <!--
    <target name="make-DBMigration_v2" description="Makes DBMigrationWizard.exe">
        <build-cpp solution.file="${dir.src}/tools/DBMigration/v2/DBMIGRATIONWIZARD/DBMigrationWizard.sln"/>
    </target>
    -->

    <!-- ================================================================= -->
    <!-- Make DeployAnalyticsTool                                          -->
    <!-- ================================================================= -->
    <target name="make-DeployAnalyticsTool" description="TODO">
        <build-cpp solution.file="${dir.src}/clients/centricity/Analytics/DeployAnalyticsTool/DeployAnalyticsTool.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make DialogicChannel60                                            -->
    <!-- ================================================================= -->
    <!-- TODO why is this a separate vcproj? -timc 5/4/2009 -->
    <target name="make-DialogicChannel60" description="Makes DialogicChannel60 devenv.exe">
        <build-cpp configuration="ReleaseSR60" solution.file="${dir.src}/winservices/ChannelManager.sln"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make eLearning                                                   -->
    <!-- ================================================================= -->
    <!-- TODO is there an eLearning solution? -timc, Cinco de Mayo -->
    <target name="make-eLearning" depends="propset" description="Makes eLearning">
        <build-cpp configuration="eLearningRelease" solution.file="${dir.src}/clients/quality/qm/qm.vcproj"/>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <build-cpp configuration="eLearningReleaseGerman" solution.file="${dir.src}/clients/quality/qm/qm.vcproj"/>
                <build-cpp configuration="eLearningReleaseSpanish" solution.file="${dir.src}/clients/quality/qm/qm.vcproj"/>
            </then>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!-- Make EnvisionCLR (includes DeployAnalyticsTool)                   -->
    <!-- ================================================================= -->
    <target name="make-EnvisionCLR" description="Makes EnvisionCLR.dll for use with RDL files">
        <build-cpp solution.file="${dir.src}/clients/centricity/Analytics/EnvisionCLR/EnvisionCLR.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make ETService                                                    -->
    <!-- ================================================================= -->
    <!-- TODO is there an EnvisionService solution? -timc, Cinco de Mayo -->
    <target name="make-EnvisionService" depends="propset" description="Makes ETService.exe">
        <!-- NOTE: I'm not sure exactly what this is doing for us, but the
        ETService Release configuration occasionally fails with errors about
        multiply defined libraries.  Running this batch file fixes it.  But it
        needs to be run in the same environment as ETService.vcproj.  That's
        why it's not invoked with executable="cmd.exe" and arg
        line="vsvars.bat" (although that seems to work as well). -->
        <exec dir="${vscommontools}" executable="cmd.exe">
            <arg line="vsvars32.bat"/>
        </exec>
        <build-cpp solution.file="${dir.src}/server/startserverprocess/C2CServerPro.vcproj"/>
        <build-cpp solution.file="${dir.src}/server/shutdownserverprocess/ShutdownServer.vcproj"/>
        <build-cpp solution.file="${dir.src}/winservices/etservice/ETService.vcproj"/>
        <build-cpp solution.file="${dir.src}/winservices/etservice/ETServiceInstall.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Evaluation Consistency Check                                 -->
    <!-- ================================================================= -->
    <target name="make-EvaluationConsistencyCheck" description="Make EvaluationConsistencyCheck.exe (a database migration utility)">
        <build-cpp solution.file="${dir.src}/tools/EvaluationConsistencyCheck/EvaluationConsistencyCheck.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make C# finder.dll                                                -->
    <!-- ================================================================= -->
    <!-- TODO is there a Finder solution? -timc, Cinco de Mayo -->
    <target name="make-Finder_CS" description="Makes finder.dll">
        <build-cpp solution.file="${dir.src}/apis/bi/com/et/bi/api/finder/finder.csproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make BI Finder Client                                             -->
    <!-- ================================================================= -->
    <!-- TODO is there a FinderClient solution? -timc, Cinco de Mayo -->
    <target name="make-FinderClient_CS" description="Makes BI Finder Client">
        <build-cpp solution.file="${dir.src}/clients/finder/finderclient.csproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Generated                                                    -->
    <!-- ================================================================= -->
    <!-- TODO is there a Generated solution? -timc, Cinco de Mayo -->
    <target name="make-Generated" description="Makes generated devenv.exe">
        <build-cpp solution.file="${dir.src}/generated/generated.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make hook                                                        -->
    <!-- ================================================================= -->
    <!-- Per Ed in email, 1/21/09 "This is the hook.dll component for getting
    Windows messages into AgentSupport to process start/stop email captures.
    This is used for email integrations.  This is a class of components that
    just needs to be built once when we change toolset (compiler version)."
    -->
    <target name="make-hook" description="Makes hook.dll">
        <build-cpp solution.file="${dir.src}/clients/quality/agentsupport/monitoring/KanaDriver/dll/hook.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make JavaContactSource.dll                                        -->
    <!-- ================================================================= -->
    <!-- TODO is there a JavaContactSource solution? -timc, Cinco de Mayo -->
    <target name="make-JavaContactSource" description="Makes javacontactsource.dll">
        <build-cpp solution.file="${dir.src}/contactsources/javacontactsource/JavaContactSource.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make NativeServiceWin32                                           -->
    <!-- ================================================================= -->
    <target name="make-NativeServiceWin32" description="Makes NativeServiceWin32.dll">
        <build-cpp solution.file="${dir.src}/server/nativeservicewin32/nativeServiceWin32.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make NotificationWindow.lib                                       -->
    <!-- ================================================================= -->
    <!-- TODO is there a NotificationWindow solution? -timc, Cinco de Mayo -->
    <target name="make-NotificationWindow_LIB" description="Makes notificationwindow.lib">
        <build-cpp solution.file="${dir.src}/clients/quality/notificationwindow/NotificationWindow.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make BI Portal                                                    -->
    <!-- ================================================================= -->
    <!-- TODO is there a BI Portal solution? -timc, Cinco de Mayo -->
    <target name="make-Portal_CS" description="Makes BI Portal">
        <build-cpp solution.file="${dir.src}/clients/portal/portal.csproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make Quality Monitoring                                          -->
    <!-- ================================================================= -->
    <!-- NOTE This looks like a PerformanceSuite target only.  So when I
    reorganize the buildtools toward the goal of creating each product
    separately, this one will standalone.  IOW, it will not be a prerequisite
    compile for anything else (as far as I know). -->
    <!-- TODO is there a QM solution? -timc, Cinco de Mayo -->
    <target name="make-QualityMonitoring" depends="propset" description="Makes QM">
        <build-cpp solution.file="${dir.src}/clients/quality/qm/qm.vcproj"/>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <build-cpp configuration="ReleaseGerman"
                    solution.file="${dir.src}/clients/quality/qm/qm.vcproj"/>
                <build-cpp configuration="ReleaseSpanish"
                    solution.file="${dir.src}/clients/quality/qm/qm.vcproj"/>
            </then>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!-- Make RegUtils                                                     -->
    <!-- ================================================================= -->
    <!-- TODO is there a RegUtils solution? -timc, Cinco de Mayo -->
    <target name="make-RegUtils" description="Makes RegUtils.lib">
        <build-cpp solution.file="${dir.src}/clients/quality/regutils/regutils.vcproj"/>
        <!-- TODO are we using this? -timc 5/27/2009 -->
        <build-cpp configuration="Debug"
            solution.file="${dir.src}/clients/quality/regutils/regutils.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make RO                                                          -->
    <!-- ================================================================= -->
    <!-- TODO is there a RO solution? -timc, Cinco de Mayo -->
    <target name="make-RO" description="Makes RO">
        <build-cpp solution.file="${dir.src}/server/ro/cpp/ro.vcproj"/>
        <!-- TODO are we using this? -timc 5/27/2009 -->
        <build-cpp configuration="Debug" solution.file="${dir.src}/server/ro/cpp/ro.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Serializable                                                 -->
    <!-- ================================================================= -->
    <!-- TODO is there a Serializable solution? -timc, Cinco de Mayo -->
    <target name="make-Serializable_LIB" description="Makes Serializable.lib">
        <build-cpp solution.file="${dir.src}/serializable/serializable.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make C# Server                                                    -->
    <!-- ================================================================= -->
    <!-- NB: The project is corearch in Acme, and server in Maya -->
    <target name="make-Server_CS" description="Makes Server.dll">
        <build-cpp solution.file="${dir.src}/server/server.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Shared.Lib                                                   -->
    <!-- ================================================================= -->
    <!-- TODO is there a SharedLib solution? -timc, Cinco de Mayo -->
    <target name="make-Shared_LIB" description="Makes Shared Lib">
        <build-cpp solution.file="${dir.src}/clients/quality/shared/Shared.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!--  Make SharedResources DLL                                         -->
    <!-- ================================================================= -->
    <!-- Note the "logic": first we figure out if it's 9.6 or earlier.  Those
    are not localized, so they get English only.  Then we check if it's
    between 9.7.0 up to but not including 9.10.0.  Those use ReleaseEnglish
    for English; German and Spanish are not affected.  Finally, if it's 9.10.0
    or later, we switch back and use Release for English. -->
    <!-- TODO is there a SharedResources solution? -timc, Cinco de Mayo -->
    <target name="make-SharedResources" depends="propset" description="Makes SharedResources.dll">
        <ac:if>
            <!-- up to 9.6.x, no localization -->
            <or>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="6"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:islessthan arg1="${MINOR}" arg2="6"/>
                </and>
                <and>
                    <ac:islessthan arg1="${MAJOR}" arg2="9"/>
                </and>
            </or>
            <then>
                <build-cpp solution.file="${dir.src}/clients/quality/sharedresources/SharedResources.vcproj"/>
            </then>
            <ac:elseif>
                <!-- 9.7.0 thru 9.9.x, localization with ReleaseEnglish -->
                <and>
                    <or>
                        <and>
                            <ac:equals arg1="${MAJOR}" arg2="9"/>
                            <ac:equals arg1="${MINOR}" arg2="7"/>
                        </and>
                        <and>
                            <ac:equals arg1="${MAJOR}" arg2="9"/>
                            <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                        </and>
                    </or>
                    <and>
                        <ac:equals arg1="${MAJOR}" arg2="9"/>
                        <ac:islessthan arg1="${MINOR}" arg2="10"/>
                    </and>
                </and>
                <then>
                    <echo message="ReleaseEnglish, ReleaseGerman, ReleaseSpanish"/>
                    <build-cpp configuration="ReleaseEnglish"
                        solution.file="${dir.src}/clients/quality/sharedresources/SharedResources.vcproj"/>
                    <build-cpp configuration="ReleaseGerman"
                        solution.file="${dir.src}/clients/quality/sharedresources/SharedResources.vcproj"/>
                    <build-cpp configuration="ReleaseSpanish"
                        solution.file="${dir.src}/clients/quality/sharedresources/SharedResources.vcproj"/>
                </then>
            </ac:elseif>
            <ac:else>
                <!-- DRY (combine with 9.6 check?) -->
                <!-- 9.10.x or later, localization with Release for English -->
                <echo message="Release, ReleaseGerman, ReleaseSpanish"/>
                <build-cpp solution.file="${dir.src}/clients/quality/sharedresources/SharedResources.vcproj"/>
                <build-cpp configuration="ReleaseGerman"
                    solution.file="${dir.src}/clients/quality/sharedresources/SharedResources.vcproj"/>
                <build-cpp configuration="ReleaseSpanish"
                    solution.file="${dir.src}/clients/quality/sharedresources/SharedResources.vcproj"/>
            </ac:else>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!--  Make SmartAgentErrs                                              -->
    <!-- ================================================================= -->
    <!-- TODO is there a SmartAgentErrs solution? -timc, Cinco de Mayo -->
    <target name="make-SmartAgentErrs" description="Makes SmartAgentErrs.dll">
        <exec dir="${dir.src}/clients/quality/agentsupport/smartagenterrs" executable="${compiler.message}" vmlauncher="${vmlauncher}" failonerror="true">
            <arg line="-v -c -s -h ..\ -r .\ -x .\ -U smartagenterrs.mc" />
        </exec>
        <build-cpp solution.file="${dir.src}/clients/quality/agentsupport/smartagenterrs/SmartAgentErrs.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make SourceRunnerService.exe                                      -->
    <!-- ================================================================= -->
    <target name="make-SourceRunner" depends="make-ContactSourceUtilities_LIB" description="Makes SourceRunnerService.exe">
        <build-cpp solution.file="${dir.src}/winservices/SourceRunnerService.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Speech Server Service and Speech Processing Client           -->
    <!-- ================================================================= -->
    <!-- The Speech apps depends on RAL.dll, Centricity_BLL.dll and
    Centricity_DAL.dll from Centricity, and Server.dll that I'm getting from
    the same location to simplify the dependencies.  The simplest thing that
    works here is to add make-Centricity as a dependency.  We need most of
    Centricity except for the deployment piece here, but I'd rather not cause
    Centricity to be redeployed just to build audio mining.  It'll stay for
    now. -timc 2/5/2009 -->
    <target name="make-Speech" depends="make-Centricity" description="Makes SpeechServerService and SpeechProcessingClient">
        <build-cpp solution.file="${dir.src}/winservices/AudioMining.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make C# TaggerWrapperService.dll                                  -->
    <!-- ================================================================= -->
    <!-- TODO is there a TaggerWrapperService solution? -timc, Cinco de Mayo -->
    <target name="make-TaggerWrapperService_CS" description="Makes TaggerWrapperService.dll">
        <build-cpp solution.file="${dir.src}/apis/bi/com/et/bi/api/tagger/wrapperservice/TaggerWrapperService.csproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make BI Tagging Client                                            -->
    <!-- ================================================================= -->
    <!-- TODO is there a TaggingClient solution? -timc, Cinco de Mayo -->
    <target name="make-TaggingClient_CS" description="Makes BI Tagging Client">
        <build-cpp solution.file="${dir.src}/clients/taggingclient/TaggingClient.csproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make TSAPI                                                        -->
    <!-- ================================================================= -->
    <!-- TODO is there a TSAPI solution? -timc, Cinco de Mayo -->
    <target name="make-TSAPI" description="Makes tsapi">
        <build-cpp solution.file="${dir.src}/contactsources/tsapi/Tsapi.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make UserTree                                                     -->
    <!-- ================================================================= -->
    <!-- TODO is there a UserTree solution? -timc, Cinco de Mayo -->
    <target name="make-UserTree_LIB" description="Makes usertree.lib devenv.exe">
        <build-cpp solution.file="${dir.src}/clients/quality/usertree/usertree.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make WebControls.ocx                                              -->
    <!-- ================================================================= -->
    <!-- TODO is there a WebControls solution? -timc, Cinco de Mayo -->
    <target name="make-WebControls_OCX" depends="propset" description="Makes WebControls.ocx">
        <build-cpp solution.file="${dir.src}/clients/reporting/controls/WebControls.vcproj"/>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <build-cpp configuration="ReleaseGerman"
                    solution.file="${dir.src}/clients/reporting/controls/WebControls.vcproj"/>
                <build-cpp configuration="ReleaseSpanish"
                    solution.file="${dir.src}/clients/reporting/controls/WebControls.vcproj"/>
            </then>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!-- Make WFM                                                          -->
    <!-- ================================================================= -->
    <target name="make-WFM" description="Makes WFM">
        <build-cpp solution.file="${dir.src}/clients/wfm/wfm.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make Windows Media Wrapper Service                                -->
    <!-- ================================================================= -->
    <!-- C:\Source\Maya\src\winservices\WMWrapperService\Redist\setup.bat -->
    <!-- NB: this target depends on WMEncoder.exe being installed on the build
    machine.  It's available locally at
    \\Bigfoot\Engineering\Software\Installs\WindowsMediaEncoder9 -->
    <target name="make-WMWrapperService" depends="register-NCT-binaries" description="Makes Windows Media wrapper service for Centricity">
        <build-cpp solution.file="${dir.src}/winservices/WMWrapperService/WMWrapperService.sln"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make XFloorWnd.ocx                                                -->
    <!-- ================================================================= -->
    <!-- TODO is there an XFloorWnd solution? -timc, Cinco de Mayo -->
    <target name="make-XFloorWnd" description="Makes XFloorWnd.ocx">
        <build-cpp solution.file="${dir.src}/clients/quality/xfloorwnd/XFloorWnd.vcproj"/>
    </target>

    <!-- ================================================================= -->
    <!-- Make, sign, and publish Centricity AV Player (Click Once)         -->
    <!-- ================================================================= -->
    <!-- timc: Do we need this any longer? -->
    <target name="publish-AVPlayer" description="Publishes Centricity AVPlayer (Click Once) using MSBuild">
        <exec dir="${dir.build}" executable="${compiler.msbuild}" vmlauncher="${vmlauncher}" failonerror="true">
            <arg line="/target:publish ${dir.src}/clients/AVPlayer/AVPlayer.csproj /property:Configuration=Release;PublishDir=${dir.workdir}/AVPlayer/ /l:FileLogger,Microsoft.Build.Engine;logfile=${dir.build}/BuildLog.txt;append=true"/>
        </exec>
    </target>

    <!-- ================================================================= -->
    <!-- Make, sign, and publish RecordingDownloadTool (Click Once)        -->
    <!-- ================================================================= -->
    <!-- timc: Do we need this any longer? -->
    <target name="publish-RecordingDownloadTool" description="Publishes Centricity RecordingDownloadTool (Click Once) using MSBuild">
        <exec dir="${dir.build}" executable="${compiler.msbuild}" vmlauncher="${vmlauncher}" failonerror="true">
            <arg line="/target:publish ${dir.src}/clients/RecordingDownloadTool/RecordingDownloadTool.csproj /property:Configuration=Release;PublishDir=${dir.workdir}/RecordingDownloadTool/ /l:FileLogger,Microsoft.Build.Engine;logfile=${dir.build}/BuildLog.txt;append=true"/>
        </exec>
    </target>

    <!-- ================================================================= -->
    <!-- Register NCT binaries (for use with WMWrapperService)             -->
    <!-- ================================================================= -->
    <target name="register-NCT-binaries">
        <!-- Don't fail on error.  The binaries may already be registered. -->
        <apply executable="regsvr32" relative="true" dir="${dir.src}/winservices/WMWrapperService/Redist">
            <!-- trailing space may be important here -->
            <arg line="/s "/>
            <fileset dir="${dir.src}/winservices/WMWrapperService/Redist" includes="**/NCT*.dll"/>
        </apply>
    </target>
    <!--
    regsvr32 exit codes:

    0 { &$Write "$DllPath Registered Successfully" }
    1 { &$Write "Bad arguments to RegSvr32" }
    2 { &$Write "OLE initialization failed for $DllPath" }
    3 { &$Write "Failed to load the module ($DllPath), you may need to check for problems with dependencies." }
    4 { &$Write "Can't find DllRegisterServer entry point in the file ($DllPath), maybe it's not a .DLL or .OCX?" }
    5 { &$Write "The assembly ($DllPath) was loaded, but the call to DllRegisterServer failed." }

    courtesy of
    http://huddledmasses.org/register-dll-calling-regsvr32-without-messageboxes-in-powershell/

    Watch out for result code 3.  This probably means that regsvr32 is not
    being run from the same directory as where the DLLs are located.
    -->

    <!-- ================================================================= -->
    <!--  Sign AgentAdherence.ocx                                          -->
    <!-- ================================================================= -->
    <!-- TODO is there an AgentAdherence solution? -timc, Cinco de Mayo -->
    <target name="sign-AgentAdherence_OCX" depends="make-AgentAdherence_OCX" description="Digitally signs AgentAdherence.ocx to verify its authenticity.">
        <!-- NB: don't forget the ${basedir}! -->
        <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
            <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.workdir}/wfm/AgentAdherence.ocx"/>
        </exec>
    </target>

    <!-- ================================================================= -->
    <!--  Sign AgentSchedule.ocx                                           -->
    <!-- ================================================================= -->
    <!-- TODO is there an AgentSchedule solution? -timc, Cinco de Mayo -->
    <target name="sign-AgentSchedule_OCX" depends="make-AgentSchedule_OCX" description="Digitally signs AgentSchedule.ocx to verify its authenticity.">
        <!-- NB: don't forget the ${basedir}! -->
        <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
            <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.workdir}/wfm/AgentSchedule.ocx"/>
        </exec>
    </target>

    <!-- ================================================================= -->
    <!--  Sign AgentX.ocx                                                  -->
    <!-- ================================================================= -->
    <!-- TODO is there an AgentX solution? -timc, Cinco de Mayo -->
    <target name="sign-AgentX_OCX" depends="propset, make-AgentX_OCX" description="Digitally signs AgentX.ocx to verify its authenticity.">
        <!-- English -->
        <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
            <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.workdir}/quality/AgentX.ocx"/>
        </exec>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <!-- NB: don't forget the ${basedir}! -->
                <!-- German -->
                <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
                    <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/quality/agentdesktop/ReleaseGerman/AgentX.ocx"/>
                </exec>
                <!-- Spanish -->
                <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
                    <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/quality/agentdesktop/ReleaseSpanish/AgentX.ocx"/>
                </exec>
            </then>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!-- Sign AnalyticsResources                                           -->
    <!-- ================================================================= -->
    <!-- AnalyticsResources is compiled in make-DeployAnalyticsTool.
    Originally I had a make-AnalyticsResources target, which compiled
    AnalyticsResources.csproj, but it's redundant. -->
    <!-- TODO is there an AnalyticsResources solution? -timc, Cinco de Mayo -->
    <target name="sign-AnalyticsResources" depends="make-DeployAnalyticsTool" description="Digitally signs EnvisionAnalyticsResources.dll to verify its authenticity.">
        <!-- NB: don't forget the ${basedir}! -->
        <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
            <!-- /f ${dir.build}/setup/Signature/myprivatecert.pfx -->
            <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/Centricity/Analytics/AnalyticsResources/obj/Release/EnvisionAnalyticsResources.dll"/>
        </exec>
    </target>

    <!-- ================================================================= -->
    <!-- Sign AnalyticsUtilities                                           -->
    <!-- ================================================================= -->
    <target name="sign-AnalyticsUtilities" depends="make-AnalyticsUtilities" description="Digitally signs EnvisionAnalyticsUtilities.dll to verify its authenticity.">
        <!-- NB: don't forget the ${basedir}! -->
        <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
            <!-- /f ${dir.build}/setup/Signature/myprivatecert.pfx -->
            <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/Centricity/Analytics/AnalyticsUtilities/obj/Release/EnvisionAnalyticsUtilities.dll"/>
        </exec>
    </target>

    <!-- ================================================================= -->
    <!--  Sign C2CReportingControls.ocx                                    -->
    <!-- ================================================================= -->
    <!-- TODO is there a C2CReportingControls solution? -timc, Cinco de Mayo -->
    <target name="sign-C2CReportingControls_OCX" depends="propset, make-C2CReportingControls_OCX" description="Digitally signs C2CReportingControls.ocx to verify its authenticity.">
        <!-- English -->
        <!-- NB: don't forget the ${basedir}! -->
        <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
            <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/reporting/C2CReportingControls/Release/C2CReportingControls.ocx"/>
        </exec>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <!-- German -->
                <!-- NB: don't forget the ${basedir}! -->
                <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
                    <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/reporting/C2CReportingControls/ReleaseGerman/C2CReportingControls.ocx"/>
                </exec>
                <!-- Spanish -->
                <!-- NB: don't forget the ${basedir}! -->
                <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
                    <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/reporting/C2CReportingControls/ReleaseSpanish/C2CReportingControls.ocx"/>
                </exec>
            </then>
        </ac:if>
    </target>

    <!-- ================================================================= -->
    <!-- Sign EnvisionCLR (includes DeployAnalyticsTool)                   -->
    <!-- ================================================================= -->
    <target name="sign-EnvisionCLR" depends="make-EnvisionCLR" description="Digitally signs EnvisionCLR.dll to verify its authenticity.">
        <!-- NB: don't forget the ${basedir}! -->
        <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
            <!-- /f ${dir.build}/setup/Signature/myprivatecert.pfx -->
            <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/Centricity/Analytics/EnvisionCLR/obj/Release/EnvisionCLR.dll"/>
        </exec>
    </target>

    <!-- ================================================================= -->
    <!-- Sign WebControls.ocx                                              -->
    <!-- ================================================================= -->
    <target name="sign-WebControls_OCX" depends="propset, make-WebControls_OCX" description="Digitally signs WebControls.ocx to verify its authenticity.">
        <!-- English -->
        <!-- NB: don't forget the ${basedir}! -->
        <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
            <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.workdir}/agentdesktop/WebControls.ocx"/>
        </exec>
        <ac:if>
            <or>
                <and>
                    <ac:isgreaterthan arg1="${MAJOR}" arg2="9"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:equals arg1="${MINOR}" arg2="7"/>
                </and>
                <and>
                    <ac:equals arg1="${MAJOR}" arg2="9"/>
                    <ac:isgreaterthan arg1="${MINOR}" arg2="7"/>
                </and>
            </or>
            <then>
                <!-- German -->
                <!-- NB: don't forget the ${basedir}! -->
                <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
                    <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/reporting/controls/ReleaseGerman/WebControls.ocx"/>
                </exec>
                <!-- Spanish -->
                <!-- NB: don't forget the ${basedir}! -->
                <exec dir="${dir.build}" executable="${basedir}/${signtool}" vmlauncher="${vmlauncher}" failonerror="true">
                    <arg line="sign /a /f ${file.pfx} /p ${signtool.password} /t ${signtool.timestampurl} ${dir.src}/clients/reporting/controls/ReleaseSpanish/WebControls.ocx"/>
                </exec>
            </then>
        </ac:if>
    </target>















</project>

